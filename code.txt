class TreeNode:
    def _init_(self, val=0, left=None, right=None):
        self.val = val
        self.left = left
        self.right = right
        
def find_extra_edge(root):
    visited = set()
    stack = [root]
    parent_map = {root: None}
    
    while stack:
        node = stack.pop()
        if node in visited:
            return parent_map[node], node
        visited.add(node)
        if node.left:
            parent_map[node.left] = node
            stack.append(node.left)
        if node.right:
            parent_map[node.right] = node
            stack.append(node.right)
    
    return None

def remove_extra_edge(root):
    parent, child = find_extra_edge(root)
    if not parent:
        return root
    if parent.left == child:
        parent.left = None
    else:
        parent.right = None
    return root